Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations
    3                         | FunctionDeclaration FunctionsAndDeclarations
    4                         | Declaration FunctionsAndDeclarations
    5                         | %empty

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    7 FunctionBody: LBRACE DeclarationsAndStatementsOp RBRACE

    8 DeclarationsAndStatementsOp: DeclarationsAndStatements
    9                            | %empty

   10 DeclarationsAndStatements: DeclarationsAndStatements Statement
   11                          | DeclarationsAndStatements Declaration
   12                          | Statement
   13                          | Declaration

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: ID LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration ParameterListOp

   17 ParameterListOp: COMMA ParameterDeclaration ParameterListOp
   18                | %empty

   19 ParameterDeclaration: TypeSpec
   20                     | TypeSpec ID

   21 Declaration: TypeSpec Declarator DeclarationOp SEMI
   22            | error SEMI

   23 DeclarationOp: COMMA Declarator DeclarationOp
   24              | %empty

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID
   28         | SHORT
   29         | DOUBLE

   30 Declarator: ID
   31           | ID ASSIGN Expr

   32 StatementAux: StatementError
   33             | StatementError StatementAux

   34 StatementError: Statement
   35               | error SEMI

   36 Statement: SEMI
   37          | Expr SEMI
   38          | LBRACE StatementAux RBRACE
   39          | LBRACE RBRACE
   40          | IF LPAR Expr RPAR StatementError
   41          | IF LPAR Expr RPAR StatementError ELSE StatementError
   42          | WHILE LPAR Expr RPAR StatementError
   43          | RETURN SEMI
   44          | RETURN Expr SEMI
   45          | LBRACE error RBRACE

   46 Expr: Expr ASSIGN Expr
   47     | Expr COMMA Expr
   48     | Expr PLUS Expr
   49     | Expr MINUS Expr
   50     | Expr MUL Expr
   51     | Expr DIV Expr
   52     | Expr MOD Expr
   53     | Expr OR Expr
   54     | Expr AND Expr
   55     | Expr BITWISEAND Expr
   56     | Expr BITWISEOR Expr
   57     | Expr BITWISEXOR Expr
   58     | Expr EQ Expr
   59     | Expr NE Expr
   60     | Expr LE Expr
   61     | Expr GE Expr
   62     | Expr LT Expr
   63     | Expr GT Expr
   64     | PLUS Expr
   65     | MINUS Expr
   66     | NOT Expr
   67     | ID LPAR ExprOp4 RPAR
   68     | ID
   69     | INTLIT
   70     | CHRLIT
   71     | REALLIT
   72     | LPAR Expr RPAR
   73     | ID LPAR error RPAR
   74     | LPAR error RPAR

   75 ExprOp4: ExprOp4 COMMA Expr
   76        | Expr
   77        | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256) 22 35 45 73 74
    CHAR (258) 25
    ELSE (259) 41
    WHILE (260) 42
    IF (261) 40 41
    INT (262) 26
    SHORT (263) 28
    DOUBLE (264) 29
    RETURN (265) 43 44
    VOID (266) 27
    BITWISEAND (267) 55
    BITWISEOR (268) 56
    BITWISEXOR (269) 57
    AND <str> (270) 54
    ASSIGN <str> (271) 31 46
    MUL <str> (272) 50
    COMMA <str> (273) 17 23 47 75
    DIV <str> (274) 51
    EQ <str> (275) 58
    GE <str> (276) 61
    GT <str> (277) 63
    LBRACE <str> (278) 7 38 39 45
    LE <str> (279) 60
    LPAR <str> (280) 15 40 41 42 67 72 73 74
    LT <str> (281) 62
    MINUS <str> (282) 49 65
    MOD <str> (283) 52
    NE <str> (284) 59
    NOT <str> (285) 66
    OR <str> (286) 53
    PLUS <str> (287) 48 64
    RBRACE <str> (288) 7 38 39 45
    RPAR (289) 15 40 41 42 67 72 73 74
    SEMI (290) 14 21 22 35 36 37 43 44
    RESERVED <str> (291)
    CHRLIT <str> (292) 70
    ID <str> (293) 15 20 30 31 67 68 73
    REALLIT <str> (294) 71
    INTLIT <str> (295) 69
    THEN (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    Program <node> (43)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <node> (44)
        on left: 2 3 4 5
        on right: 1 2 3 4
    FunctionDefinition <node> (45)
        on left: 6
        on right: 2
    FunctionBody <node> (46)
        on left: 7
        on right: 6
    DeclarationsAndStatementsOp <node> (47)
        on left: 8 9
        on right: 7
    DeclarationsAndStatements <node> (48)
        on left: 10 11 12 13
        on right: 8 10 11
    FunctionDeclaration <node> (49)
        on left: 14
        on right: 3
    FunctionDeclarator <node> (50)
        on left: 15
        on right: 6 14
    ParameterList <node> (51)
        on left: 16
        on right: 15
    ParameterListOp <node> (52)
        on left: 17 18
        on right: 16 17
    ParameterDeclaration <node> (53)
        on left: 19 20
        on right: 16 17
    Declaration <node> (54)
        on left: 21 22
        on right: 4 11 13
    DeclarationOp <node> (55)
        on left: 23 24
        on right: 21 23
    TypeSpec <node> (56)
        on left: 25 26 27 28 29
        on right: 6 14 19 20 21
    Declarator <node> (57)
        on left: 30 31
        on right: 21 23
    StatementAux <node> (58)
        on left: 32 33
        on right: 33 38
    StatementError <node> (59)
        on left: 34 35
        on right: 32 33 40 41 42
    Statement <node> (60)
        on left: 36 37 38 39 40 41 42 43 44 45
        on right: 10 12 34
    Expr <node> (61)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 31 37 40 41 42 44 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 72 75 76
    ExprOp4 <node> (62)
        on left: 75 76 77
        on right: 67 75


State 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   22 Declaration: error . SEMI

    SEMI  shift, and go to state 13


State 2

   25 TypeSpec: CHAR .

    $default  reduce using rule 25 (TypeSpec)


State 3

   26 TypeSpec: INT .

    $default  reduce using rule 26 (TypeSpec)


State 4

   28 TypeSpec: SHORT .

    $default  reduce using rule 28 (TypeSpec)


State 5

   29 TypeSpec: DOUBLE .

    $default  reduce using rule 29 (TypeSpec)


State 6

   27 TypeSpec: VOID .

    $default  reduce using rule 27 (TypeSpec)


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations .

    $default  reduce using rule 1 (Program)


State 9

    2 FunctionsAndDeclarations: FunctionDefinition . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

    4 FunctionsAndDeclarations: Declaration . FunctionsAndDeclarations

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

    6 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   21 Declaration: TypeSpec . Declarator DeclarationOp SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

   22 Declaration: error SEMI .

    $default  reduce using rule 22 (Declaration)


State 14

    0 $accept: Program $end .

    $default  accept


State 15

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 16

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 17

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 18

   15 FunctionDeclarator: ID . LPAR ParameterList RPAR
   30 Declarator: ID .
   31           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 30 (Declarator)


State 19

    6 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 23
    SEMI    shift, and go to state 24

    FunctionBody  go to state 25


State 20

   21 Declaration: TypeSpec Declarator . DeclarationOp SEMI

    COMMA  shift, and go to state 26

    $default  reduce using rule 24 (DeclarationOp)

    DeclarationOp  go to state 27


State 21

   31 Declarator: ID ASSIGN . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 36


State 22

   15 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 37
    ParameterDeclaration  go to state 38
    TypeSpec              go to state 39


State 23

    7 FunctionBody: LBRACE . DeclarationsAndStatementsOp RBRACE

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatementsOp)

    DeclarationsAndStatementsOp  go to state 45
    DeclarationsAndStatements    go to state 46
    Declaration                  go to state 47
    TypeSpec                     go to state 48
    Statement                    go to state 49
    Expr                         go to state 50


State 24

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


State 25

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 6 (FunctionDefinition)


State 26

   23 DeclarationOp: COMMA . Declarator DeclarationOp

    ID  shift, and go to state 51

    Declarator  go to state 52


State 27

   21 Declaration: TypeSpec Declarator DeclarationOp . SEMI

    SEMI  shift, and go to state 53


State 28

   72 Expr: LPAR . Expr RPAR
   74     | LPAR . error RPAR

    error    shift, and go to state 54
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 55


State 29

   65 Expr: MINUS . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 56


State 30

   66 Expr: NOT . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 57


State 31

   64 Expr: PLUS . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 58


State 32

   70 Expr: CHRLIT .

    $default  reduce using rule 70 (Expr)


State 33

   67 Expr: ID . LPAR ExprOp4 RPAR
   68     | ID .
   73     | ID . LPAR error RPAR

    LPAR  shift, and go to state 59

    $default  reduce using rule 68 (Expr)


State 34

   71 Expr: REALLIT .

    $default  reduce using rule 71 (Expr)


State 35

   69 Expr: INTLIT .

    $default  reduce using rule 69 (Expr)


State 36

   31 Declarator: ID ASSIGN Expr .
   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77

    $default  reduce using rule 31 (Declarator)


State 37

   15 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 78


State 38

   16 ParameterList: ParameterDeclaration . ParameterListOp

    COMMA  shift, and go to state 79

    $default  reduce using rule 18 (ParameterListOp)

    ParameterListOp  go to state 80


State 39

   19 ParameterDeclaration: TypeSpec .
   20                     | TypeSpec . ID

    ID  shift, and go to state 81

    $default  reduce using rule 19 (ParameterDeclaration)


State 40

   42 Statement: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 82


State 41

   40 Statement: IF . LPAR Expr RPAR StatementError
   41          | IF . LPAR Expr RPAR StatementError ELSE StatementError

    LPAR  shift, and go to state 83


State 42

   43 Statement: RETURN . SEMI
   44          | RETURN . Expr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 84
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 85


State 43

   38 Statement: LBRACE . StatementAux RBRACE
   39          | LBRACE . RBRACE
   45          | LBRACE . error RBRACE

    error    shift, and go to state 86
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    RBRACE   shift, and go to state 87
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    StatementAux    go to state 88
    StatementError  go to state 89
    Statement       go to state 90
    Expr            go to state 50


State 44

   36 Statement: SEMI .

    $default  reduce using rule 36 (Statement)


State 45

    7 FunctionBody: LBRACE DeclarationsAndStatementsOp . RBRACE

    RBRACE  shift, and go to state 91


State 46

    8 DeclarationsAndStatementsOp: DeclarationsAndStatements .
   10 DeclarationsAndStatements: DeclarationsAndStatements . Statement
   11                          | DeclarationsAndStatements . Declaration

    error    shift, and go to state 1
    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    INT      shift, and go to state 3
    SHORT    shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 8 (DeclarationsAndStatementsOp)

    Declaration  go to state 92
    TypeSpec     go to state 48
    Statement    go to state 93
    Expr         go to state 50


State 47

   13 DeclarationsAndStatements: Declaration .

    $default  reduce using rule 13 (DeclarationsAndStatements)


State 48

   21 Declaration: TypeSpec . Declarator DeclarationOp SEMI

    ID  shift, and go to state 51

    Declarator  go to state 20


State 49

   12 DeclarationsAndStatements: Statement .

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 50

   37 Statement: Expr . SEMI
   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    COMMA       shift, and go to state 66
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    SEMI        shift, and go to state 94


State 51

   30 Declarator: ID .
   31           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 30 (Declarator)


State 52

   23 DeclarationOp: COMMA Declarator . DeclarationOp

    COMMA  shift, and go to state 26

    $default  reduce using rule 24 (DeclarationOp)

    DeclarationOp  go to state 95


State 53

   21 Declaration: TypeSpec Declarator DeclarationOp SEMI .

    $default  reduce using rule 21 (Declaration)


State 54

   74 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 96


State 55

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   72     | LPAR Expr . RPAR

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    COMMA       shift, and go to state 66
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    RPAR        shift, and go to state 97


State 56

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   65     | MINUS Expr .

    $default  reduce using rule 65 (Expr)


State 57

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   66     | NOT Expr .

    $default  reduce using rule 66 (Expr)


State 58

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   64     | PLUS Expr .

    $default  reduce using rule 64 (Expr)


State 59

   67 Expr: ID LPAR . ExprOp4 RPAR
   73     | ID LPAR . error RPAR

    error    shift, and go to state 98
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    COMMA  reduce using rule 77 (ExprOp4)
    RPAR   reduce using rule 77 (ExprOp4)

    Expr     go to state 99
    ExprOp4  go to state 100


State 60

   55 Expr: Expr BITWISEAND . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 101


State 61

   56 Expr: Expr BITWISEOR . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 102


State 62

   57 Expr: Expr BITWISEXOR . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 103


State 63

   54 Expr: Expr AND . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 104


State 64

   46 Expr: Expr ASSIGN . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 105


State 65

   50 Expr: Expr MUL . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 106


State 66

   47 Expr: Expr COMMA . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 107


State 67

   51 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 108


State 68

   58 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 109


State 69

   61 Expr: Expr GE . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 110


State 70

   63 Expr: Expr GT . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 111


State 71

   60 Expr: Expr LE . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 112


State 72

   62 Expr: Expr LT . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 113


State 73

   49 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 114


State 74

   52 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 115


State 75

   59 Expr: Expr NE . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 116


State 76

   53 Expr: Expr OR . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 117


State 77

   48 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 118


State 78

   15 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 79

   17 ParameterListOp: COMMA . ParameterDeclaration ParameterListOp

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 119
    TypeSpec              go to state 39


State 80

   16 ParameterList: ParameterDeclaration ParameterListOp .

    $default  reduce using rule 16 (ParameterList)


State 81

   20 ParameterDeclaration: TypeSpec ID .

    $default  reduce using rule 20 (ParameterDeclaration)


State 82

   42 Statement: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 120


State 83

   40 Statement: IF LPAR . Expr RPAR StatementError
   41          | IF LPAR . Expr RPAR StatementError ELSE StatementError

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 121


State 84

   43 Statement: RETURN SEMI .

    $default  reduce using rule 43 (Statement)


State 85

   44 Statement: RETURN Expr . SEMI
   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    COMMA       shift, and go to state 66
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    SEMI        shift, and go to state 122


State 86

   35 StatementError: error . SEMI
   45 Statement: LBRACE error . RBRACE

    RBRACE  shift, and go to state 123
    SEMI    shift, and go to state 124


State 87

   39 Statement: LBRACE RBRACE .

    $default  reduce using rule 39 (Statement)


State 88

   38 Statement: LBRACE StatementAux . RBRACE

    RBRACE  shift, and go to state 125


State 89

   32 StatementAux: StatementError .
   33             | StatementError . StatementAux

    error    shift, and go to state 126
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    RBRACE  reduce using rule 32 (StatementAux)

    StatementAux    go to state 127
    StatementError  go to state 89
    Statement       go to state 90
    Expr            go to state 50


State 90

   34 StatementError: Statement .

    $default  reduce using rule 34 (StatementError)


State 91

    7 FunctionBody: LBRACE DeclarationsAndStatementsOp RBRACE .

    $default  reduce using rule 7 (FunctionBody)


State 92

   11 DeclarationsAndStatements: DeclarationsAndStatements Declaration .

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 93

   10 DeclarationsAndStatements: DeclarationsAndStatements Statement .

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 94

   37 Statement: Expr SEMI .

    $default  reduce using rule 37 (Statement)


State 95

   23 DeclarationOp: COMMA Declarator DeclarationOp .

    $default  reduce using rule 23 (DeclarationOp)


State 96

   74 Expr: LPAR error RPAR .

    $default  reduce using rule 74 (Expr)


State 97

   72 Expr: LPAR Expr RPAR .

    $default  reduce using rule 72 (Expr)


State 98

   73 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 128


State 99

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   76 ExprOp4: Expr .

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77

    $default  reduce using rule 76 (ExprOp4)


State 100

   67 Expr: ID LPAR ExprOp4 . RPAR
   75 ExprOp4: ExprOp4 . COMMA Expr

    COMMA  shift, and go to state 129
    RPAR   shift, and go to state 130


State 101

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   55     | Expr BITWISEAND Expr .
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    EQ     shift, and go to state 68
    GE     shift, and go to state 69
    GT     shift, and go to state 70
    LE     shift, and go to state 71
    LT     shift, and go to state 72
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    NE     shift, and go to state 75
    PLUS   shift, and go to state 77

    $default  reduce using rule 55 (Expr)


State 102

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   56     | Expr BITWISEOR Expr .
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEXOR  shift, and go to state 62
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    PLUS        shift, and go to state 77

    $default  reduce using rule 56 (Expr)


State 103

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   57     | Expr BITWISEXOR Expr .
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    PLUS        shift, and go to state 77

    $default  reduce using rule 57 (Expr)


State 104

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   54     | Expr AND Expr .
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    PLUS        shift, and go to state 77

    $default  reduce using rule 54 (Expr)


State 105

   46 Expr: Expr . ASSIGN Expr
   46     | Expr ASSIGN Expr .
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77

    $default  reduce using rule 46 (Expr)


State 106

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   50     | Expr MUL Expr .
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    $default  reduce using rule 50 (Expr)


State 107

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   47     | Expr COMMA Expr .
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77

    $default  reduce using rule 47 (Expr)


State 108

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   51     | Expr DIV Expr .
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    $default  reduce using rule 51 (Expr)


State 109

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   58     | Expr EQ Expr .
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    GE     shift, and go to state 69
    GT     shift, and go to state 70
    LE     shift, and go to state 71
    LT     shift, and go to state 72
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 58 (Expr)


State 110

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   61     | Expr GE Expr .
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 61 (Expr)


State 111

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   63     | Expr GT Expr .

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 63 (Expr)


State 112

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   60     | Expr LE Expr .
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 60 (Expr)


State 113

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   62     | Expr LT Expr .
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 62 (Expr)


State 114

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   49     | Expr MINUS Expr .
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 67
    MOD  shift, and go to state 74

    $default  reduce using rule 49 (Expr)


State 115

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   52     | Expr MOD Expr .
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    $default  reduce using rule 52 (Expr)


State 116

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   59     | Expr NE Expr .
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL    shift, and go to state 65
    DIV    shift, and go to state 67
    GE     shift, and go to state 69
    GT     shift, and go to state 70
    LE     shift, and go to state 71
    LT     shift, and go to state 72
    MINUS  shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 77

    $default  reduce using rule 59 (Expr)


State 117

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   53     | Expr OR Expr .
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    PLUS        shift, and go to state 77

    $default  reduce using rule 53 (Expr)


State 118

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   48     | Expr PLUS Expr .
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 67
    MOD  shift, and go to state 74

    $default  reduce using rule 48 (Expr)


State 119

   17 ParameterListOp: COMMA ParameterDeclaration . ParameterListOp

    COMMA  shift, and go to state 79

    $default  reduce using rule 18 (ParameterListOp)

    ParameterListOp  go to state 131


State 120

   42 Statement: WHILE LPAR Expr . RPAR StatementError
   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    COMMA       shift, and go to state 66
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    RPAR        shift, and go to state 132


State 121

   40 Statement: IF LPAR Expr . RPAR StatementError
   41          | IF LPAR Expr . RPAR StatementError ELSE StatementError
   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    COMMA       shift, and go to state 66
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77
    RPAR        shift, and go to state 133


State 122

   44 Statement: RETURN Expr SEMI .

    $default  reduce using rule 44 (Statement)


State 123

   45 Statement: LBRACE error RBRACE .

    $default  reduce using rule 45 (Statement)


State 124

   35 StatementError: error SEMI .

    $default  reduce using rule 35 (StatementError)


State 125

   38 Statement: LBRACE StatementAux RBRACE .

    $default  reduce using rule 38 (Statement)


State 126

   35 StatementError: error . SEMI

    SEMI  shift, and go to state 124


State 127

   33 StatementAux: StatementError StatementAux .

    $default  reduce using rule 33 (StatementAux)


State 128

   73 Expr: ID LPAR error RPAR .

    $default  reduce using rule 73 (Expr)


State 129

   75 ExprOp4: ExprOp4 COMMA . Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    Expr  go to state 134


State 130

   67 Expr: ID LPAR ExprOp4 RPAR .

    $default  reduce using rule 67 (Expr)


State 131

   17 ParameterListOp: COMMA ParameterDeclaration ParameterListOp .

    $default  reduce using rule 17 (ParameterListOp)


State 132

   42 Statement: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 126
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    StatementError  go to state 135
    Statement       go to state 90
    Expr            go to state 50


State 133

   40 Statement: IF LPAR Expr RPAR . StatementError
   41          | IF LPAR Expr RPAR . StatementError ELSE StatementError

    error    shift, and go to state 126
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    StatementError  go to state 136
    Statement       go to state 90
    Expr            go to state 50


State 134

   46 Expr: Expr . ASSIGN Expr
   47     | Expr . COMMA Expr
   48     | Expr . PLUS Expr
   49     | Expr . MINUS Expr
   50     | Expr . MUL Expr
   51     | Expr . DIV Expr
   52     | Expr . MOD Expr
   53     | Expr . OR Expr
   54     | Expr . AND Expr
   55     | Expr . BITWISEAND Expr
   56     | Expr . BITWISEOR Expr
   57     | Expr . BITWISEXOR Expr
   58     | Expr . EQ Expr
   59     | Expr . NE Expr
   60     | Expr . LE Expr
   61     | Expr . GE Expr
   62     | Expr . LT Expr
   63     | Expr . GT Expr
   75 ExprOp4: ExprOp4 COMMA Expr .

    BITWISEAND  shift, and go to state 60
    BITWISEOR   shift, and go to state 61
    BITWISEXOR  shift, and go to state 62
    AND         shift, and go to state 63
    ASSIGN      shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 67
    EQ          shift, and go to state 68
    GE          shift, and go to state 69
    GT          shift, and go to state 70
    LE          shift, and go to state 71
    LT          shift, and go to state 72
    MINUS       shift, and go to state 73
    MOD         shift, and go to state 74
    NE          shift, and go to state 75
    OR          shift, and go to state 76
    PLUS        shift, and go to state 77

    $default  reduce using rule 75 (ExprOp4)


State 135

   42 Statement: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 42 (Statement)


State 136

   40 Statement: IF LPAR Expr RPAR StatementError .
   41          | IF LPAR Expr RPAR StatementError . ELSE StatementError

    ELSE  shift, and go to state 137

    $default  reduce using rule 40 (Statement)


State 137

   41 Statement: IF LPAR Expr RPAR StatementError ELSE . StatementError

    error    shift, and go to state 126
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 44
    CHRLIT   shift, and go to state 32
    ID       shift, and go to state 33
    REALLIT  shift, and go to state 34
    INTLIT   shift, and go to state 35

    StatementError  go to state 138
    Statement       go to state 90
    Expr            go to state 50


State 138

   41 Statement: IF LPAR Expr RPAR StatementError ELSE StatementError .

    $default  reduce using rule 41 (Statement)
